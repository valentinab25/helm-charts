apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-dpl-varnish
  labels:
    {{- include "appl.labels" . | nindent 4 }}
    component: varnish

spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "appl.selectorLabels" . | nindent 6 }}
      component: varnish
  template:
    metadata:
      labels:
        {{- include "appl.selectorLabels" . | nindent 8 }}
        component: varnish
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "appl.serviceAccountName" . }}
      containers:
      - name: varnish
        image: eeacms/plone-varnish:7.6-1.0
        env:
        - name: TZ
          value: "{{ .Values.timezone }}"
        - name: VARNISH_BACKEND
          value: "{{ .Values.varnish.backend }}"
        - name: VARNISH_BACKEND_PORT
          value: "{{ .Values.varnish.port }}"
        - name: VARNISH_HTTP_PORT
          value: "{{ .Values.varnish.port }}"
        {{- range $key, $value := .Values.varnish.environment }}
        {{- if ($value) }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}

        ports:
        - name: http
          containerPort: {{ .Values.varnish.port }}

        {{- if (.Values.varnish.livenessProbe) }}
        livenessProbe:
          {{- toYaml .Values.varnish.livenessProbe | nindent 10 }}
        {{- end }}
        {{- if (.Values.varnish.startupProbe) }}
        startupProbe:
          {{- toYaml .Values.varnish.startupProbe | nindent 10 }}
        {{- end }}

        resources:
          {{- toYaml .Values.varnish.resources | nindent 10 }}

      {{- with .Values.varnish.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.varnish.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.varnish.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
